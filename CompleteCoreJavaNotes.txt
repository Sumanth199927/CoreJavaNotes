Java
---------------------------------------------------
Crearted by sunmicroSystem in 1991
java 1.0 created in 1996
---------------------------------------------------
it is a programming language design to run on virtual machine on every platform
---------------------------------------------------
oak-green-java
----------------------------------
comparing other language

java-high language,object oriented programming language
c-procedural programming language
c++ - procedural and object oriented programming language
---------------------------------------------------
jdk

to develop and run a java application environment
---------------------------------------------------
jre

to only run java application environment
---------------------------------------------------
jvm

to run the java program line by line 
---------------------------------------------------

jdk
----------------------------------------------------------------------------------------------------------------------------------------------------------
-  ----------------------------------------------------------------------------------------------------------------------------------------------------- -
-  -                                                                                                                                                    - -    
-  -                                                                                                                                                     -   
-  -                                                                                                                                                     -
-  -                                                                                                                                                     -
-  -                                                                                                                                                     -
-  -                                                                                                                                                     -
-  -                                                                                                                                                     -
-  ----------------------------------------------------------------------------------------------------------------------------------------------------- -
----------------------------------------------------------------------------------------------------------------------------------------------------------


how it works and converted
---------------------------------------------------------------
java sorce file[.java]

java complier[compile]

java class file[.class file]

import class loader subsystem

various memory areaof jvm
          |
execution | engine
          |
        interpreter
        
native method interface <----------------- native method library

-----------------------------------------------------------------------------------------
to develop android developments
1.java enterprise edition[jee]
2.java micro edition[jme]

to develop web application
1.jsp-order,results
2.jdbc-get data while processing
3.servelets-processing
-----------------------------------------------------------------------------------------
convention while using this

1. class : StudentDetails;
2. variable : studentDetails;
3. method : studentdetails();
4. Constructor : StudentDetails();
-----------------------------------------------------------------------------------------
while saving the programs varies in different ide

class StudentDetails
{
//any name can be given while saving because public is not used
}

public class StudentDetails
{
//class name should be given if we give other name it will show error
}
-----------------------------------------------------------------------------------------
main method in java

public static void main(String[] args)

-we can interchange and write public and static

public - to call by jvm from anywhere
static - complier can call it without th creation of an object or before
void - main() method wont return anyValue to jvm
main - we can change but customization of jvm must be done
String[] args - command line argument

-if no static then every object wanted to create new main class

-non static - specific to only 1 object [acc_num]
-static - common to more than  1 object [ifsc]

-the above syntax is very strict if we perform any changes we will get runtime exception saying "NoSuchMethodError:main"

-instead of args we can use anything

-we can declare in main()
final - child depend on parent
Synchronized
Strictfp
-----------------------------------------------------------------------------------------
example

class Test
{
final static synchronized Strictfp public void main(String...args)
{
System.out.println("void main");
}
}
//void main
-----------------------------------------------------------------------------------------
About System.out.println();

class Test                              //Test is a class name
{                                      //s is a static variable present in Test Class of type String
static String s="Java";               
}
Test.s.length();                       //.length() is a method present in string class
--------
class System                           //System is a class present in javaLangPackage
{
static PrintStream out;                //out is a static variable present in system class of type PrintStream
}
System.out.println("Hello");           //println() is a method present in print stream class
-----------------------------------------------------------------------------------------
Terminologies
   |
datatypes
   |-----------------------------------------------------------------------------------------------------|
primitive                                                                                           non primitive
   |----------------------------|                                                             |--------|--------|
boolean                       numeric                                                      String   Array     Etc
   |                   |--------------------|
Boolean             character             integral                                                           
                       |                       |
                    char                   integral point                      floating point                 
                                                     |                                  |
                    |----------|----------|----------|                                  |---------------|
                    Byte      short      int      long                               float           double
                                           
                                        


